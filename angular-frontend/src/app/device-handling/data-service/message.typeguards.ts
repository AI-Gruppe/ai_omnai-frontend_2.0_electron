import { omnAIScopeData } from './data.models';
/**
 * Defines the possible WebSocket message formats.
 */
export type wsMessageFormats = string | omnAIScopeData;

function isStringMessage(message: unknown): message is string {
  return typeof message === 'string';
}

function isOmnAIDataMessage(message: unknown): message is omnAIScopeData {
  if (typeof message !== 'object' || message === null) return false;

  const msg = message as object;

  if (!('devices' in msg) || !('data' in msg)) return false;
  if (
    !Array.isArray(msg.devices) ||
    !msg.devices.every((d: unknown) => typeof d === 'string')
  ) {
    return false;
  }

  if (
    !Array.isArray(msg.data) ||
    !msg.data.every(
      (entry: any) =>
        typeof entry.timestamp === 'number' &&
        Array.isArray(entry.value) &&
        entry.value.every((v: unknown) => typeof v === 'number'),
    )
  ) {
    return false;
  }

  return true;
}

/**
 * Type guards for WebSocket message validation.
 * The websocket data are generated by the omnAI backend process. Messages depend on the state.
 * First, a message indicating a successful connection is send.
 * Then, omnAIscope data is captured and send in bulk.
 *
 * The type guards ensure that incoming messages conform to expected formats.
 *
 * ## Message Types:
 * - `string`: Simple text messages, typically used for status updates or commands.
 * - `omnAIScopeData`: Structured data containing device information and time-series values.
 *
 * The expected structure of an `OmnAIDataMessage` aligns with the WebSocket API specification:
 * {@link https://app.clickup.com/9015468401/v/dc/8cnu8bh-4415/8cnu8bh-5655}
 */
export const messageTypeguards = { isOmnAIDataMessage, isStringMessage };
